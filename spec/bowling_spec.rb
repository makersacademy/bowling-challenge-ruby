require 'bowling'

describe Bowling do

  it 'gives a score of 0 after no pins being knocked over' do
    io = double :io
    expect(io).to receive(:puts).with('Frame: 1')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 2')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 3')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 4')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 5')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 6')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 7')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 8')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 9')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Round by Round Scores: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0')
    expect(io).to receive(:puts).with('Total Score: 0')
    game0 = Bowling.new(io)
    game0.regular_frame(0)
  end

  it 'gives a correct score in an example game' do
    io = double :io
    expect(io).to receive(:puts).with('Frame: 1')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 2')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('6')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('3')
    expect(io).to receive(:puts).with('Frame: 3')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 4')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 5')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 6')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('3')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('7')
    expect(io).to receive(:puts).with('Frame: 7')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('2')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Frame: 8')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 9')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Bonus round')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Round by Round Scores: 19, 9, 30, 23, 20, 12, 6, 20, 24, 18')
    expect(io).to receive(:puts).with('Total Score: 181')
    game1 = Bowling.new(io)
    game1.regular_frame(0)
  end

  it 'gives a correct score in another example game' do
    io = double :io
    expect(io).to receive(:puts).with('Frame: 1')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Frame: 2')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Frame: 3')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 4')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('9')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('1')
    expect(io).to receive(:puts).with('Frame: 5')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('7')
    expect(io).to receive(:puts).with('Frame: 6')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Frame: 7')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 8')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 9')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Round by Round Scores: 15, 20, 20, 10, 7, 8, 15, 5, 19, 9')
    expect(io).to receive(:puts).with('Total Score: 128')
    game2 = Bowling.new(io)
    game2.regular_frame(0)
  end

  it 'gives a correct score in another example game also testing dodgey inputs' do
    io = double :io
    expect(io).to receive(:puts).with('Frame: 1')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('11')
    expect(io).to receive(:puts).with('Please enter a valid score!')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Frame: 2')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('6')
    expect(io).to receive(:puts).with('Please enter a valid score!')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Frame: 3')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 4')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('9')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('1')
    expect(io).to receive(:puts).with('Frame: 5')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('7')
    expect(io).to receive(:puts).with('Frame: 6')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Frame: 7')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 8')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('0')
    expect(io).to receive(:puts).with('Frame: 9')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('5')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('4')
    expect(io).to receive(:puts).with('Round by Round Scores: 15, 20, 20, 10, 7, 8, 15, 5, 19, 9')
    expect(io).to receive(:puts).with('Total Score: 128')
    game3 = Bowling.new(io)
    game3.regular_frame(0)
  end

  it 'gives a score of 300 after twelve throws' do
    io = double :io
    expect(io).to receive(:puts).with('Frame: 1')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:puts).with('Frame: 2')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 3')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 4')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 5')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 6')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 7')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 8')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 9')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Frame: 10')
    expect(io).to receive(:puts).with('Enter the score of the first bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Bonus round')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Enter the score of the next bowl')
    expect(io).to receive(:gets).and_return('10')
    expect(io).to receive(:puts).with('Round by Round Scores: 30, 30, 30, 30, 30, 30, 30, 30, 30, 30')
    expect(io).to receive(:puts).with('Total Score: 300')
    game4 = Bowling.new(io)
    game4.regular_frame(0)
  end
end
