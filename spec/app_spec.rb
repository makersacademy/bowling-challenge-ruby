require_relative "../app"

describe Application do
  it "returns user input if the given pins are between 0-10" do
    io = double(:io)
    app = Application.new(io)
    frame = Frame.new(1)
    expect(io).to receive(:gets).and_return("5")
    expect(app.get_roll(frame)).to eq 5
  end

  it "asks the user to enter a valid number of pins if the given number is not between 0-10" do
    io = double(:io)
    app = Application.new(io)
    frame = Frame.new(1)
    expect(io).to receive(:gets).and_return("-1")
    expect(io).to receive(:puts).with("Please enter a valid number of pins")
    expect(io).to receive(:gets).and_return("7")
    expect(app.get_roll(frame)).to eq 7
  end

  it "returns correct scores for all frames with no bonuses from strikes or spares" do
    io = double(:io)
    app = Application.new(io)
    expect(io).to receive(:puts).with("Frame 1 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 1 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")

    expect(io).to receive(:puts).with("Frame 2 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 2 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")

    expect(io).to receive(:puts).with("Frame 3 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 3 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")

    expect(io).to receive(:puts).with("Frame 4 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 4 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")

    expect(io).to receive(:puts).with("Frame 5 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 5 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")

    expect(io).to receive(:puts).with("Frame 6 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 6 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 18")

    expect(io).to receive(:puts).with("Frame 7 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 7 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 18")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 21")

    expect(io).to receive(:puts).with("Frame 8 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 8 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 18")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 21")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 24")

    expect(io).to receive(:puts).with("Frame 9 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 9 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 18")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 21")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 24")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 27")

    expect(io).to receive(:puts).with("Frame 10 - Roll 1:")
    expect(io).to receive(:gets).and_return("1")
    expect(io).to receive(:puts).with("Frame 10 - Roll 2:")
    expect(io).to receive(:gets).and_return("2")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 3")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 6")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 9")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 12")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 15")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 18")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 21")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 24")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 27")
    expect(io).to receive(:puts).with("Frame: 10 - Roll 1: 1 - Roll 2: 2 - Bonus: 0 - Total: 30")

    app.run
  end

  it "returns correct scores for all frames with bonuses from alternating spares and strikes" do
    io = double(:io)
    app = Application.new(io)
    expect(io).to receive(:puts).with("Frame 1 - Roll 1:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame 1 - Roll 2:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 0 - Total: 10")

    expect(io).to receive(:puts).with("Frame 2 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 30")

    expect(io).to receive(:puts).with("Frame 3 - Roll 1:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame 3 - Roll 2:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 0 - Total: 45")

    expect(io).to receive(:puts).with("Frame 4 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 65")

    expect(io).to receive(:puts).with("Frame 5 - Roll 1:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame 5 - Roll 2:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 0 - Total: 80")

    expect(io).to receive(:puts).with("Frame 6 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 100")

    expect(io).to receive(:puts).with("Frame 7 - Roll 1:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame 7 - Roll 2:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 105")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 5 - Roll 2: 5 - Bonus: 0 - Total: 115")

    expect(io).to receive(:puts).with("Frame 8 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 105")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 125")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 135")

    expect(io).to receive(:puts).with("Frame 9 - Roll 1:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame 9 - Roll 2:")
    expect(io).to receive(:gets).and_return("5")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 105")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 125")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 140")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 5 - Roll 2: 5 - Bonus: 0 - Total: 150")

    expect(io).to receive(:puts).with("Frame 10 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 35")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 55")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 70")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 105")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 125")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 5 - Total: 140")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 5 - Roll 2: 5 - Bonus: 10 - Total: 160")
    expect(io).to receive(:puts).with("Frame: 10 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 170")

    app.run
  end

  it "returns correct scores for all frames with multiple strikes in a row" do
    io = double(:io)
    app = Application.new(io)
    expect(io).to receive(:puts).with("Frame 1 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 10")

    expect(io).to receive(:puts).with("Frame 2 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 20")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 30")

    expect(io).to receive(:puts).with("Frame 3 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 50")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 60")

    expect(io).to receive(:puts).with("Frame 4 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 80")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 90")

    expect(io).to receive(:puts).with("Frame 5 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 110")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 120")

    expect(io).to receive(:puts).with("Frame 6 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 120")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 140")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 150")

    expect(io).to receive(:puts).with("Frame 7 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 120")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 150")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 170")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 180")

    expect(io).to receive(:puts).with("Frame 8 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 120")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 150")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 180")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 200")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 210")

    expect(io).to receive(:puts).with("Frame 9 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 120")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 150")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 180")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 210")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 230")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 240")

    expect(io).to receive(:puts).with("Frame 10 - Roll 1:")
    expect(io).to receive(:gets).and_return("10")
    expect(io).to receive(:puts).with("Frame: 1 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 30")
    expect(io).to receive(:puts).with("Frame: 2 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 60")
    expect(io).to receive(:puts).with("Frame: 3 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 90")
    expect(io).to receive(:puts).with("Frame: 4 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 120")
    expect(io).to receive(:puts).with("Frame: 5 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 150")
    expect(io).to receive(:puts).with("Frame: 6 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 180")
    expect(io).to receive(:puts).with("Frame: 7 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 210")
    expect(io).to receive(:puts).with("Frame: 8 - Roll 1: 10 - Roll 2: 0 - Bonus: 20 - Total: 240")
    expect(io).to receive(:puts).with("Frame: 9 - Roll 1: 10 - Roll 2: 0 - Bonus: 10 - Total: 260")
    expect(io).to receive(:puts).with("Frame: 10 - Roll 1: 10 - Roll 2: 0 - Bonus: 0 - Total: 270")
    app.run
  end
end
